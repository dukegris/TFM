<project 
		xmlns="http://maven.apache.org/POM/4.0.0" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="
			http://maven.apache.org/POM/4.0.0 
			http://maven.apache.org/xsd/maven-4.0.0.xsd">
			
	<modelVersion>4.0.0</modelVersion>
	
	<artifactId>RCS-App</artifactId>
	<name>TFM App Module</name>
	<description>TFM App Module</description>	
	<packaging>jar</packaging>
	
	<parent>
		<groupId>es.rcs.tfm</groupId>
		<artifactId>RCS-TFM</artifactId>
		<version>0.0.4-SNAPSHOT</version>
	</parent>
	
	<properties>
		<mainclass>es.rcs.tfm.main.AppBoot</mainclass>
		<mainclass>CommandTool</mainclass>
	</properties>

	<dependencies>
	
		<!-- =====================================
			 TFM
			 ===================================== -->
		<dependency>
			<groupId>es.rcs.tfm</groupId>
			<artifactId>RCS-Idx</artifactId>
			<version>${tfm.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>es.rcs.tfm</groupId>
			<artifactId>RCS-Db</artifactId>
			<version>${tfm.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>es.rcs.tfm</groupId>
			<artifactId>RCS-Nlp</artifactId>
			<version>${tfm.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>es.rcs.tfm</groupId>
			<artifactId>RCS-Srv</artifactId>
			<version>${tfm.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>es.rcs.tfm</groupId>
			<artifactId>RCS-Api</artifactId>
			<version>${tfm.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>es.rcs.tfm</groupId>
			<artifactId>RCS-Spa</artifactId>
			<version>${tfm.version}</version>
			<scope>compile</scope>
		</dependency>

		<!-- =====================================
			 J2EE
			 ===================================== -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>javax.persistence-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>javax.transaction-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>compile</scope>
		</dependency>
		
		<!-- =====================================
			 APACHE COMMONS
			 ===================================== -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- =====================================
			 SPRING
			 ===================================== -->
		<!-- FRAMEWORK -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- DATA -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-envers</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-solr</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-core</artifactId>
			<scope>compile</scope>
		</dependency>			
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-webmvc</artifactId>
			<scope>runtime</scope>
		</dependency>			
		<!-- SHELL -->
		<dependency>
			<groupId>org.springframework.shell</groupId>
			<artifactId>spring-shell-starter</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- SECURITY -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- BOOT -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-json</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-solr</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- =====================================
			 HIBERNATE
			 ===================================== -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- =====================================
			 UTILITIES
			 ===================================== -->
		<!-- ANTLR para compatibilidad con spark -->
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- HIKARI -->
		<dependency>
			<groupId>com.zaxxer</groupId>
		    <artifactId>HikariCP</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- ATOMIKOS JTA -->
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>atomikos-util</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions-jdbc</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions-jta</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions-hibernate4</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- WRAPPER -->
		<dependency>
			<groupId>tanukisoft</groupId>
			<artifactId>wrapper</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- =====================================
			 XML
			 ===================================== -->
		<!-- JACKSON -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<!-- <version>${jackson.version}</version> -->
			<!-- <version>2.9.9.1</version> -->
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-smile</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-paranamer</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-scala_${scala.main}</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- JJWT -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<scope>runtime</scope>
		</dependency>


		<!-- =====================================
			 UTILITIES
			 ===================================== -->
		<!-- LOMBOK -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>compile</scope>

		</dependency>
		<!-- CRNK -->
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-format</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-format-plain-json</artifactId>
			<scope>runtime</scope>
		</dependency>		
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-home</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-meta</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-security</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-monitor</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-operations</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-validation</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- 
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-data</artifactId>
			<scope>runtime</scope>
		</dependency>
		 -->
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-data-jpa</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-jpa</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-setup</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-servlet</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-setup-servlet</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-spring</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-setup-spring</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-setup-spring-boot2</artifactId>
			<scope>compile</scope>
		</dependency>
   	
		<!-- =====================================
			 SERVERS
			 ===================================== -->
			 
		<!-- JETTY -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-util</artifactId>
			<scope>compile</scope>
		</dependency>
		
		<!-- SOLR -->
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.minidev</groupId>
			<artifactId>json-smart</artifactId>
			<version>2.1.0</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- H2 -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- POSTGRESQL -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- =====================================
			 NLP
			 ===================================== -->
		<!-- SCALA -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- HADOOP -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-hdfs</artifactId>
			<scope>compile</scope>
		</dependency>
		
		<!-- SPARK -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.main}</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_${scala.main}</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scala.main}</artifactId>
			<scope>compile</scope>
		</dependency>
		
		<!-- NLP -->
		<dependency>
			<groupId>com.johnsnowlabs.nlp</groupId>
			<artifactId>spark-nlp_${scala.main}</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.johnsnowlabs.nlp</groupId>
			<artifactId>spark-nlp-eval_${scala.main}</artifactId>
			<version>2.2.2</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-hadoop</artifactId>
			<version>1.11.0</version>
		</dependency>
		<dependency>
			<groupId>com.databricks</groupId>
			<artifactId>spark-xml_${scala.main}</artifactId>
			<version>0.7.0</version>
		</dependency>
		<dependency>
			<groupId>com.databricks</groupId>
			<artifactId>spark-csv_${scala.main}</artifactId>
			<version>1.5.0</version>
		</dependency>

		<!-- =====================================
			 LOGGER
			 ===================================== -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>compile</scope>
		</dependency>
		
		<!-- =====================================
			 TEST
			 ===================================== -->
		<!-- SPRING -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- JUNIT -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- Include all jars in one file -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>${mainclass}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- Make the jar executable by adding a Main-Class and Class-Path to the manifest -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>${start-class}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- Copy dependencies to lib directory (used by the manifest) -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
