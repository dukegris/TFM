<?xml version="1.0" ?>
<!-- ============================================
     ::DATATOOL:: Generated from "insdseq.asn"
     ::DATATOOL:: by application DATATOOL version 2.4.4
     ::DATATOOL:: on 12/18/2013 23:04:02
     ============================================ -->

<xs:schema
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:ncbi="http://www.ncbi.nlm.nih.gov"
  xmlns="http://www.ncbi.nlm.nih.gov"
  targetNamespace="http://www.ncbi.nlm.nih.gov"
  elementFormDefault="qualified"
  attributeFormDefault="unqualified">

<!-- ============================================ -->
<!-- This section is mapped from module "INSD-INSDSeq"
================================================= -->
<!--
$Revision: 413850 $
************************************************************************

 ASN.1 and XML for the components of a GenBank/EMBL/DDBJ sequence record
 The International Nucleotide Sequence Database (INSD) collaboration
 Version 1.6, 25 May 2010

************************************************************************
-->


<!--
  INSDSeq provides the elements of a sequence as presented in the
    GenBank/EMBL/DDBJ-style flatfile formats, with a small amount of
    additional structure.
    Although this single perspective of the three flatfile formats
    provides a useful simplification, it hides to some extent the
    details of the actual data underlying those formats. Nevertheless,
    the XML version of INSD-Seq is being provided with
    the hopes that it will prove useful to those who bulk-process
    sequence data at the flatfile-format level of detail. Further 
    documentation regarding the content and conventions of those formats 
    can be found at:

    URLs for the DDBJ, EMBL, and GenBank Feature Table Document:
    http://www.ddbj.nig.ac.jp/FT/full_index.html
    http://www.ebi.ac.uk/embl/Documentation/FT_definitions/feature_table.html
    http://www.ncbi.nlm.nih.gov/projects/collab/FT/index.html

    URLs for DDBJ, EMBL, and GenBank Release Notes :
    ftp://ftp.ddbj.nig.ac.jp/database/ddbj/ddbjrel.txt
    http://www.ebi.ac.uk/embl/Documentation/Release_notes/current/relnotes.html
    ftp://ftp.ncbi.nih.gov/genbank/gbrel.txt

    Because INSDSeq is a compromise, a number of pragmatic decisions have
    been made:

  In pursuit of simplicity and familiarity a number of fields do not
    have full substructure defined here where there is already a
    standard flatfile format string. For example:

   Dates:      DD-MON-YYYY (eg 10-JUN-2003)

   Author:     LastName, Initials  (eg Smith, J.N.)
            or Lastname Initials   (eg Smith J.N.)

   Journal:    JournalName Volume (issue), page-range (year)
            or JournalName Volume(issue):page-range(year)
            eg Appl. Environ. Microbiol. 61 (4), 1646-1648 (1995)
               Appl. Environ. Microbiol. 61(4):1646-1648(1995).

  FeatureLocations are representated as in the flatfile feature table,
    but FeatureIntervals may also be provided as a convenience

  FeatureQualifiers are represented as in the flatfile feature table.

  Primary has a string that represents a table to construct
    a third party (TPA) sequence.

  other-seqids can have strings with the "vertical bar format" sequence
    identifiers used in BLAST for example, when they are non-INSD types.

  Currently in flatfile format you only see Accession numbers, but there 
    are others, like patents, submitter clone names, etc which will 
    appear here

  There are also a number of elements that could have been more exactly
    specified, but in the interest of simplicity have been simply left as
    optional. For example:

  All publicly accessible sequence records in INSDSeq format will
    include accession and accession.version. However, these elements are 
    optional in optional in INSDSeq so that this format can also be used   
    for non-public sequence data, prior to the assignment of accessions and 
    version numbers. In such cases, records will have only "other-seqids".

  sequences will normally all have "sequence" filled in. But contig records
    will have a "join" statement in the "contig" slot, and no "sequence".
    We also may consider a retrieval option with no sequence of any kind
    and no feature table to quickly check minimal values.

  Four (optional) elements are specific to records represented via the EMBL
    sequence database: INSDSeq_update-release, INSDSeq_create-release,
    INSDSeq_entry-version, and INSDSeq_database-reference.

  One (optional) element is specific to records originating at the GenBank
    and DDBJ sequence databases: INSDSeq_segment.

********
-->
<xs:element name="INSDSet">
  <xs:complexType>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="INSDSeq"/>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<xs:element name="INSDSeq">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="INSDSeq_locus" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_length" type="xs:integer"/>
      <xs:element name="INSDSeq_strandedness" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_moltype" type="xs:string"/>
      <xs:element name="INSDSeq_topology" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_division" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_update-date" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_create-date" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_update-release" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_create-release" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_definition" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_primary-accession" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_entry-version" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_accession-version" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_other-seqids" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDSeqid"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDSeq_secondary-accessions" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDSecondary-accn"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
<!--
  INSDSeq_project has been deprecated in favor of INSDSeq_xrefs .
  This element may be be removed from a future version of this DTD.
-->
      <xs:element name="INSDSeq_project" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_keywords" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDKeyword"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDSeq_segment" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_source" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_organism" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_taxonomy" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_references" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDReference"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDSeq_comment" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_comment-set" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDComment"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDSeq_struc-comments" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDStrucComment"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDSeq_primary" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_source-db" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_database-reference" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_feature-table" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDFeature"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDSeq_feature-set" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDFeatureSet"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
<!-- Optional for contig, wgs, etc. -->
      <xs:element name="INSDSeq_sequence" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_contig" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDSeq_alt-seq" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDAltSeqData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
<!--
  INSDSeq_xrefs provides cross-references from a sequence record
  to other database resources. These cross-references are at the
  level of the entire record, rather than at the level of a specific
  feature. These cross-references can include: BioProject, BioSample,
  Sequence Read Archive, etc.
-->
      <xs:element name="INSDSeq_xrefs" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDXref"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<xs:element name="INSDSeqid" type="xs:string"/>

<xs:element name="INSDSecondary-accn" type="xs:string"/>

<xs:element name="INSDKeyword" type="xs:string"/>

<!--
 INSDReference_position contains a string value indicating the
 basepair span(s) to which a reference applies. The allowable
 formats are:

   X..Y  : Where X and Y are integers separated by two periods,
           X >= 1 , Y <= sequence length, and X <= Y 

           Multiple basepair spans can exist, separated by a
           semi-colon and a space. For example : 10..20; 100..500
             
   sites : The string literal 'sites', indicating that a reference
           provides sequence annotation information, but the specific
           basepair spans are either not captured, or were too numerous
           to record.

           The 'sites' literal string is singly occuring, and
            cannot be used in conjunction with any X..Y basepair spans.

           'sites' is a convention utilized by GenBank, and might
           not be presented in XML provided by EMBL and DDBJ.

   References that lack an INSDReference_position element are not
   attributed to any particular region of the sequence.
-->
<xs:element name="INSDReference">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="INSDReference_reference" type="xs:string"/>
      <xs:element name="INSDReference_position" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDReference_authors" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDAuthor"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDReference_consortium" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDReference_title" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDReference_journal" type="xs:string"/>
      <xs:element name="INSDReference_xref" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDXref"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDReference_pubmed" type="xs:integer" minOccurs="0"/>
      <xs:element name="INSDReference_remark" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<xs:element name="INSDAuthor" type="xs:string"/>

<!--
 INSDXref provides a method for referring to records in
 other databases. INSDXref_dbname is a string value that
 provides the name of the database, and INSDXref_dbname
 is a string value that provides the record's identifier
 in that database.
-->
<xs:element name="INSDXref">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="INSDXref_dbname" type="xs:string"/>
      <xs:element name="INSDXref_id" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<xs:element name="INSDComment">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="INSDComment_type" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDComment_paragraphs">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDCommentParagraph"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<xs:element name="INSDCommentParagraph" type="xs:string"/>

<xs:element name="INSDStrucComment">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="INSDStrucComment_name" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDStrucComment_items">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDStrucCommentItem"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<xs:element name="INSDStrucCommentItem">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="INSDStrucCommentItem_tag" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDStrucCommentItem_value" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDStrucCommentItem_url" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<!--
 INSDFeature_operator contains a string value describing
 the relationship among a set of INSDInterval within
 INSDFeature_intervals. The allowable formats are:

   join :  The string literal 'join' indicates that the
           INSDInterval intervals are biologically joined
           together into a contiguous molecule.

   order : The string literal 'order' indicates that the
           INSDInterval intervals are in the presented
           order, but they are not necessarily contiguous.

   Either 'join' or 'order' is required if INSDFeature_intervals
   is comprised of more than one INSDInterval .
-->
<xs:element name="INSDFeatureSet">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="INSDFeatureSet_annot-source" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDFeatureSet_features">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDFeature"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<xs:element name="INSDFeature">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="INSDFeature_key" type="xs:string"/>
      <xs:element name="INSDFeature_location" type="xs:string"/>
      <xs:element name="INSDFeature_intervals" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDInterval"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDFeature_operator" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDFeature_partial5" minOccurs="0">
        <xs:complexType>
          <xs:attribute name="value" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="true"/>
                <xs:enumeration value="false"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDFeature_partial3" minOccurs="0">
        <xs:complexType>
          <xs:attribute name="value" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="true"/>
                <xs:enumeration value="false"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDFeature_quals" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDQualifier"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDFeature_xrefs" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDXref"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<!--
 INSDInterval_iscomp is a boolean indicating whether
 an INSDInterval_from / INSDInterval_to location
 represents a location on the complement strand.
 When INSDInterval_iscomp is TRUE, it essentially
 confirms that a 'from' value which is greater than
 a 'to' value is intentional, because the location
 is on the opposite strand of the presented sequence.
 INSDInterval_interbp is a boolean indicating whether
 a feature (such as a restriction site) is located
 between two adjacent basepairs. When INSDInterval_interbp
 is TRUE, the 'from' and 'to' values will differ by
 exactly one base for linear molecules. For circular 
 molecules, if the inter-basepair position falls between
 the last and the first base, then 'from' will be the
 final base (equal to the length of the sequence), and
 'to' will have a value of 1.
-->
<xs:element name="INSDInterval">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="INSDInterval_from" type="xs:integer" minOccurs="0"/>
      <xs:element name="INSDInterval_to" type="xs:integer" minOccurs="0"/>
      <xs:element name="INSDInterval_point" type="xs:integer" minOccurs="0"/>
      <xs:element name="INSDInterval_iscomp" minOccurs="0">
        <xs:complexType>
          <xs:attribute name="value" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="true"/>
                <xs:enumeration value="false"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDInterval_interbp" minOccurs="0">
        <xs:complexType>
          <xs:attribute name="value" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="true"/>
                <xs:enumeration value="false"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDInterval_accession" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<xs:element name="INSDQualifier">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="INSDQualifier_name" type="xs:string"/>
      <xs:element name="INSDQualifier_value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<!--
 INSDAltSeqData provides for sequence representations other than
 literal basepair abbreviations (INSDSeq_sequence), such as the
 CONTIG/CO linetype of the GenBank and EMBL flatfile formats.
 It also accomodates the specification of accession-number ranges,
 which are presented on a WGS master record (for the contigs and
 and scaffolds of a WGS project).
-->
<xs:element name="INSDAltSeqData">
  <xs:complexType>
    <xs:sequence>
<!-- e.g., contig, wgs, scaffold, cage, genome -->
      <xs:element name="INSDAltSeqData_name" type="xs:string"/>
      <xs:element name="INSDAltSeqData_items" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="INSDAltSeqItem"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<xs:element name="INSDAltSeqItem">
  <xs:complexType>
    <xs:sequence>
      <xs:element name="INSDAltSeqItem_interval" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="INSDInterval"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDAltSeqItem_isgap" minOccurs="0">
        <xs:complexType>
          <xs:attribute name="value" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="true"/>
                <xs:enumeration value="false"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="INSDAltSeqItem_gap-length" type="xs:integer" minOccurs="0"/>
      <xs:element name="INSDAltSeqItem_gap-type" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDAltSeqItem_gap-linkage" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDAltSeqItem_gap-comment" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDAltSeqItem_first-accn" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDAltSeqItem_last-accn" type="xs:string" minOccurs="0"/>
      <xs:element name="INSDAltSeqItem_value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:element>

</xs:schema>
